{"version":3,"file":"tw-merge.cjs.production.min.js","sources":["../src/lib/utils.ts","../src/lib/create-merge.ts","../src/lib/create-lru-cache.ts","../src/rules.ts","../src/tailwind.ts","../src/index.ts"],"sourcesContent":["export function isNumericValue(value?: string) {\n  if (!value) return true;\n  const arbitraryValue = value.match(/^\\[(.*)\\]$/)?.[1];\n  return !isNaN(parseInt(arbitraryValue ?? value));\n}\n\nfunction sortContextSection(section: string[], separator: string) {\n  return section\n    .sort((a, b) => {\n      if (a.startsWith(\"[\") || b.startsWith(\"[\")) return 0;\n      return a.localeCompare(b);\n    })\n    .join(separator);\n}\n\nexport function normalizeContext(context: string, separator: string) {\n  if (!context) return context;\n  const important = context.endsWith(\"!\");\n  const variants = context.replace(/:!?$/, \"\").split(separator);\n  let section: string[] = [];\n  let normalizedSections: string[] = [];\n  function commitSection() {\n    if (section.length > 0)\n      normalizedSections.push(sortContextSection(section, separator));\n  }\n  for (let i = 0; i < variants.length; i++) {\n    const variant = variants[i]!;\n    if (variant.startsWith(\"[\")) {\n      // is arbitrary variant\n      commitSection();\n      normalizedSections.push(variant);\n      section = [];\n    } else section.push(variant);\n  }\n  commitSection();\n\n  return `${normalizedSections.join(separator)}${separator}${\n    important ? \"!\" : \"\"\n  }`;\n}\n","import { Handler, RuleSet } from \"../rules\";\n\nimport { createLruCache } from \"./create-lru-cache\";\nimport { normalizeContext } from \"./utils\";\n\ntype ParsedRule = [RegExp, Handler];\n\nexport type CreateMergeConfig = {\n  cacheSize?: number;\n  separator?: string;\n  prefix?: string;\n};\n\nexport function createMerge(\n  ruleSet: RuleSet,\n  { cacheSize = 500, separator = \":\", prefix }: CreateMergeConfig = {}\n) {\n  const cache = createLruCache<string, string>(cacheSize);\n\n  const parsedRuleSet = ruleSet.map(\n    ([regExp, handler]) =>\n      [\n        new RegExp(\n          `^(?<c>.*${separator}!?|!?)?-?${prefix ? `${prefix}-` : \"\"}${regExp}`\n        ),\n        handler,\n      ] as ParsedRule\n  );\n\n  function merge(className: string) {\n    const cached = cache.get(className);\n    if (cached !== undefined) return cached;\n\n    const memoryStore: Partial<Record<string, unknown>>[] = [];\n\n    const classes = className.split(\" \");\n\n    const outputClasses: string[] = [];\n\n    // - for each class from right to left\n    for (let classI = classes.length - 1; classI >= 0; classI--) {\n      const currentClass = classes[classI]!;\n      let didNotMatchOrWasContinued = true;\n      // - for each rule\n      for (let ruleI = 0; ruleI < parsedRuleSet.length; ruleI++) {\n        const rule = parsedRuleSet[ruleI]!;\n        const regexp = rule[0];\n        const match = currentClass.match(regexp);\n\n        // - if class matches rule, execute it\n        if (match) {\n          didNotMatchOrWasContinued = false;\n          const groups = match.groups!;\n          const context = normalizeContext(groups?.c ?? \"\", separator);\n          const handler = rule[1];\n\n          const memory = ((memoryStore[ruleI] ??= {})[context] ??= {});\n\n          const result = handler(memory, groups!);\n          const keepClass = result === true;\n          const continueToNextRule = result === \"c\";\n\n          if (keepClass) outputClasses.unshift(currentClass);\n\n          // - finish with the class unless the rule says so\n          if (!continueToNextRule) break;\n\n          didNotMatchOrWasContinued = true;\n        }\n      }\n\n      if (didNotMatchOrWasContinued) outputClasses.unshift(currentClass);\n    }\n\n    return cache.set(className, outputClasses.join(\" \"));\n  }\n\n  return merge;\n}\n","interface LruCache<Key, Value> {\n  get(key: Key): Value | undefined;\n  set(key: Key, value: Value): Value;\n}\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nexport function createLruCache<Key, Value>(\n  maxCacheSize: number\n): LruCache<Key, Value> {\n  if (maxCacheSize < 1)\n    return { get: () => undefined, set: (_, value) => value };\n\n  let cacheSize = 0;\n  let cache = new Map<Key, Value>();\n  let previousCache = new Map<Key, Value>();\n\n  function update(key: Key, value: Value) {\n    cache.set(key, value);\n    cacheSize++;\n\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  }\n\n  return {\n    get(key) {\n      let value = cache.get(key);\n      if (value !== undefined) return value;\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set(key, value) {\n      if (cache.has(key)) cache.set(key, value);\n      else update(key, value);\n      return value;\n    },\n  };\n}\n","import { isNumericValue } from \"./lib/utils\";\n\nexport type Handler<T = any> = (\n  memory: T,\n  matches: NonNullable<RegExpMatchArray[\"groups\"]>\n) => boolean | \"c\"; // keep class | continue to next rule\n\nexport type Rule = [string, Handler];\nexport type RuleSet = Rule[];\n\nexport const TRAILING_SLASH_REGEXP = \"(\\\\/\\\\d+)?\";\nexport const VALUE_REGEXP = `(-(?<v>.+?)${TRAILING_SLASH_REGEXP})?`;\n\n// simple rule\n// -----------\n\nexport type SimpleHandlerOptions = { byType?: boolean };\n\nexport function createSimpleHandler({ byType }: SimpleHandlerOptions = {}) {\n  const simpleHandler: Handler<\n    Record<string, Partial<Record<\"number\" | \"other\", boolean>>>\n  > = (memory, { v: value, t: target }) => {\n    const type = byType && isNumericValue(value) ? \"number\" : \"other\";\n    const mem = (memory[target!] ??= {});\n\n    // seen before\n    if (mem[type]) return false;\n\n    // never seen\n    return (mem[type] = true);\n  };\n\n  return simpleHandler;\n}\n\nexport type SimpleRuleOptions = SimpleHandlerOptions;\n\nexport function simpleRule(\n  target: string,\n  { byType }: SimpleRuleOptions = {}\n): Rule {\n  const regExp = `(?<t>${target})${VALUE_REGEXP}$`;\n  return [regExp, createSimpleHandler({ byType })];\n}\n\n// cardinal rule\n// -------------\n\nexport type CardinalHandlerOptions = {\n  byType?: boolean;\n};\n\ntype Direction = string;\n\nconst CARDINAL_OVERRIDES: Record<string, string> = {\n  t: \",y,tl,tr\",\n  r: \",x,tr,br\",\n  b: \",y,br,bl\",\n  l: \",x,bl,tl\",\n  x: \"\",\n  y: \"\",\n  s: \"\",\n  e: \"\",\n  ss: \",e,s\",\n  se: \",e,s\",\n  es: \",e,s\",\n  ee: \",e,s\",\n};\nconst CARDINAL_DIRECTIONS =\n  Object.keys(CARDINAL_OVERRIDES).join(\"|\") + \"|tl|tr|br|bl\";\n\nexport function createCardinalHandler({ byType }: CardinalHandlerOptions = {}) {\n  const cardinalHandler: Handler<\n    Partial<Record<Direction, Partial<Record<\"number\" | \"other\", boolean>>>> & {\n      _?: Partial<Record<\"number\" | \"other\", Set<string>>>;\n    }\n  > = (memory, { v: value, d: direction = \"\" }) => {\n    const type = byType && isNumericValue(value) ? \"number\" : \"other\";\n    const mem = (memory[direction] ??= {});\n\n    // seen before\n    if (mem[type]) return false;\n\n    // apply override\n    const memOverriders = ((memory._ ??= {})[type] ??= new Set());\n    if (\n      CARDINAL_OVERRIDES[direction]\n        ?.split(\",\")\n        .some((dir) => memOverriders.has(dir))\n    )\n      return false;\n\n    // remember overrider\n    memOverriders.add(direction);\n\n    // never seen\n    mem[type] = true;\n    return true;\n  };\n\n  return cardinalHandler;\n}\n\nexport type CardinalRuleOptions = {\n  /**\n   * Whether the direction is dash-separated (e.g. `border-t-2`)\n   * @default true\n   */\n  dash?: boolean;\n} & CardinalHandlerOptions;\n\nexport function cardinalRule(\n  target: string,\n  { dash = true, byType }: CardinalRuleOptions = {}\n): Rule {\n  const _target = `${target}(${dash ? \"-\" : \"\"}(?<d>${CARDINAL_DIRECTIONS}))?`;\n  const regExp = `${_target}${VALUE_REGEXP}$`;\n  return [regExp, createCardinalHandler({ byType })];\n}\n\nexport function cardinalRules(targets: string, options?: CardinalRuleOptions) {\n  const _targets = targets.split(\"|\");\n  return _targets.map((target) => cardinalRule(target, options));\n}\n\n// unique rule\n// -----------\n\nexport function createUniqueHandler() {\n  const uniqueHandler: Handler<Record<string, boolean>> = (memory, groups) => {\n    const key = Object.entries(groups).find((x) => x[1])![0];\n    return memory[key] ? false : (memory[key] = true);\n  };\n  return uniqueHandler;\n}\n\nexport type UniqueRuleOptions = { prefix?: string; def?: boolean };\n\nexport function uniqueRule(targets: (string | string[])[]): Rule {\n  const regExp = `(${targets\n    .map((target, targetI) =>\n      Array.isArray(target)\n        ? target\n            .slice(1)\n            .map(\n              (subtarget, subtargetI) =>\n                `(?<i${targetI}_${subtargetI}>${`${target[0]}-(${subtarget})`})`\n            )\n        : `(?<i${targetI}>${target})`\n    )\n    .flat()\n    .join(\"|\")})${TRAILING_SLASH_REGEXP}$`;\n  return [regExp, createUniqueHandler()];\n}\n\n// arbitrary rule\n// --------------\n\nexport function createArbitraryHandler() {\n  const arbitraryHandler: Handler<Record<string, { done?: boolean }>> = (\n    memory,\n    { p: property }\n  ) => {\n    const mem = (memory[property!] ??= {});\n\n    // seen before\n    if (mem.done) return false;\n\n    // never seen\n    return (mem.done = true);\n  };\n\n  return arbitraryHandler;\n}\n\nexport function arbitraryRule(): Rule {\n  return [`\\\\[(?<p>.+?):.*\\\\]$`, createArbitraryHandler()];\n}\n\n// conflict rule\n// -------------\n\nexport type ConflictRuleTargets = Record<string, string>;\n\nexport function createConflictHandler(targets: ConflictRuleTargets) {\n  const overridableMap: Record<string, string[]> = {};\n  Object.entries(targets).forEach(([overridingUtility, overridableUtilities]) =>\n    overridableUtilities.split(\"|\").forEach((value) => {\n      overridableMap[value] ??= [];\n      overridableMap[value]!.push(overridingUtility);\n    })\n  );\n\n  const conflictHandler: Handler<Record<string, boolean>> = (\n    memory,\n    { u: utility }\n  ) => {\n    // is overridable utility and overriding utility has been seen\n    const skipClass = Boolean(\n      utility! in overridableMap &&\n        overridableMap[utility!]!.some((u) => memory[u])\n    );\n    if (skipClass) return false;\n\n    // is overriding utility\n    if (utility! in targets) memory[utility!] = true;\n\n    // continue evaluating other rules\n    return \"c\";\n  };\n\n  return conflictHandler;\n}\n\nexport function conflictRule(targets: ConflictRuleTargets): Rule {\n  const overridingUtilities = Object.keys(targets);\n  const overridableUtilities = Object.values(targets).join(\"|\").split(\"|\");\n  const matchingClasses = [...overridingUtilities, ...overridableUtilities];\n  const utility = `(?<u>${matchingClasses.join(\"|\")})`;\n  const regExp = `${utility}${VALUE_REGEXP}$`;\n  return [regExp, createConflictHandler(targets)];\n}\n","import {\n  RuleSet,\n  uniqueRule,\n  simpleRule,\n  cardinalRules,\n  cardinalRule,\n  arbitraryRule,\n  conflictRule,\n} from \"./rules\";\n\nconst DISPLAY =\n  \"block|inline-block|inline-flex|inline-table|inline-grid|inline|flex|table-caption|table-cell|table-column-group|table-column|table-footer-group|table-header-group|table-row-group|table-row|table|flow-root|grid|contents|list-item|hidden\";\n\nconst ISOLATION = \"isolate|isolation-auto\";\n\nconst OBJECT_FIT = \"contain|cover|fill|none|scale-down\";\nconst BG_AND_OBJECT_POSITION =\n  \"bottom|center|left|left-bottom|left-top|right|right-bottom|right-top|top\";\n\nconst POSITION = \"static|fixed|absolute|relative|sticky\";\n\nconst VISIBILITY = \"visible|invisible|collapse\";\n\nconst FLEX_DIRECTION = \"row|row-reverse|col|col-reverse\";\nconst FLEX_WRAP = \"wrap|wrap-reverse|nowrap\";\n\nconst ALIGN_CONTENT =\n  \"normal|center|start|end|between|around|evenly|baseline|stretch\";\n\nconst FONT_AND_SHADOW_SIZE = \"xs|sm|base|md|lg|xl|[\\\\d.]+xl|inner|none\";\nconst FONT_SMOOTHING = \"antialiased|subpixel-antialiased\";\nconst FONT_STYLE = \"italic|not-italic\";\nconst FONT_WEIGHT =\n  \"thin|extralight|light|normal|medium|semibold|bold|extrabold|black\";\n\nconst LIST_STYLE_POSITION = \"inside|outside\";\n\nconst TEXT_ALIGN = \"left|center|right|justify|start|end\";\nconst TEXT_DECORATION = \"underline|overline|line-through|no-underline\";\nconst TEXT_DECORATION_STYLE = \"solid|double|dotted|dashed|wavy\";\nconst TEXT_TRANSFORM = \"uppercase|lowercase|capitalize|normal-case\";\nconst TEXT_OVERFLOW = \"truncate|text-ellipsis|text-clip\";\n\nconst BG_ATTACHMENT = \"fixed|local|scroll\";\nconst BG_REPEAT =\n  \"repeat|no-repeat|repeat-x|repeat-y|repeat-round|repeat-space\";\nconst BG_SIZE = \"auto|cover|contain\";\n\nconst BORDER_AND_OUTLINE_STYLE = \"solid|dashed|dotted|double|hidden|none\";\n\nconst FVN_FIGURE = \"lining-nums|oldstyle-nums\";\nconst FVN_SPACING = \"proportional-nums|tabular-nums\";\nconst FVN_FRACTION = \"diagonal-fractions|stacked-fractions\";\n\nconst SCROLL_BEHAVIOR = \"auto|smooth\";\nconst SCROLL_SNAP_ALIGN = \"start|end|center|none\";\nconst SCROLL_SNAP_STOP = \"normal|always\";\nconst SCROLL_SNAP_TYPE = \"none|x|y|both|mandatory|proximity\";\n\n// TODO: text-<something>/20 should override line-height (leading)\n// TODO: ^ same with opacities and other trailing slash values\n// TODO: text-decoration-thickness (conflicts with text-decoration-color and there are custom values: auto and from-font)\nexport function tailwind(): RuleSet {\n  return [\n    // these rules are at the top because they need to run before others\n    conflictRule({\n      \"inset-x\": \"left|right\",\n      \"inset-y\": \"top|bottom\",\n      inset: \"inset-x|inset-y|start|end|left|right|top|bottom\",\n      \"sr-only\": \"not-sr-only\",\n      \"not-sr-only\": \"sr-only\",\n      \"normal-nums\":\n        \"ordinal|slashed-zero|lining-nums|oldstyle-nums|proportional-nums|tabular-nums|diagonal-fractions|stacked-fractons\",\n      ordinal: \"normal-nums\",\n      \"slashed-zero\": \"normal-nums\",\n      \"lining-nums\": \"normal-nums\",\n      \"oldstyle-nums\": \"normal-nums\",\n      \"proportional-nums\": \"normal-nums\",\n      \"tabular-nums\": \"normal-nums\",\n      \"diagonal-fractions\": \"normal-nums\",\n      \"stacked-fractons\": \"normal-nums\",\n      \"bg-gradient\": \"bg-none\",\n      \"bg-none\": \"bg-gradient\",\n    }),\n    uniqueRule([\n      DISPLAY,\n      ISOLATION,\n      POSITION,\n      VISIBILITY,\n      FONT_SMOOTHING,\n      FONT_STYLE,\n      FVN_FIGURE,\n      FVN_SPACING,\n      FVN_FRACTION,\n      TEXT_DECORATION,\n      TEXT_TRANSFORM,\n      TEXT_OVERFLOW,\n    ]),\n    uniqueRule([\n      [\"content\", ALIGN_CONTENT],\n      [\"list\", LIST_STYLE_POSITION],\n      [\"decoration\", TEXT_DECORATION_STYLE],\n      [\"border\", BORDER_AND_OUTLINE_STYLE],\n      [\"divide\", BORDER_AND_OUTLINE_STYLE],\n      [\"outline|outline\", BORDER_AND_OUTLINE_STYLE],\n      [\"shadow\", FONT_AND_SHADOW_SIZE],\n      [\"font\", FONT_WEIGHT],\n      [\"object\", OBJECT_FIT, BG_AND_OBJECT_POSITION],\n    ]),\n    uniqueRule([\n      [\n        \"scroll\",\n        SCROLL_BEHAVIOR,\n        SCROLL_SNAP_ALIGN,\n        SCROLL_SNAP_STOP,\n        SCROLL_SNAP_TYPE,\n      ],\n      [\"bg\", BG_ATTACHMENT, BG_AND_OBJECT_POSITION, BG_REPEAT, BG_SIZE],\n      [\"text\", TEXT_ALIGN, FONT_AND_SHADOW_SIZE],\n      [\"flex\", FLEX_DIRECTION, FLEX_WRAP],\n    ]),\n    conflictRule({ flex: \"basis|grow|shrink\" }),\n    // -----------------------------------------------------------------\n    simpleRule(\n      \"accent|align|animate|aspect|auto-cols|auto-rows|backdrop-blur|backdrop-brightness|backdrop-contrast|backdrop-grayscale|backdrop-hue-rotate|backdrop-invert|backdrop-opacity|backdrop-saturate|backdrop-sepia|basis|bg-blend|bg-clip|bg-origin|bg-none|bg-gradient|bg|blur|border-collapse|border-spacing|bottom|box-decoration|box|break-after|break-before|break-inside|break|brightness|caption|caret|clear|col-end|col-start|columns|col|content|contrast|cursor|decoration|delay|divide-x-reverse|divide-x|divide-y-reverse|divide-y|divide|drop-shadow|duration|ease|end|fill|flex|float|grayscale|grid-cols|grid-flow|grid-rows|grow|hue-rotate|hyphens|h|indent|invert|items|justify-items|justify-self|justify|leading|left|line-clamp|list-image|list|max-h|max-w|min-h|min-w|mix-blend|opacity|order|origin|outline-offset|place-content|place-items|place-self|pointer-events|resize|right|ring-inset|rotate|row-end|row-start|row|saturate|select|self|sepia|shadow|shrink|skew-x|skew-y|space-x-reverse|space-x|space-y-reverse|space-y|start|table|top|touch|tracking|transition|translate-x|translate-y|underline-offset|whitespace|will-change|w|z\"\n    ),\n    simpleRule(\"text|outline|ring-offset|ring|from|via|to|stroke|font\", {\n      byType: true,\n    }),\n    cardinalRule(\"border\", { byType: true }),\n    ...cardinalRules(\"rounded|gap|inset|scale|overflow|overscroll\"),\n    ...cardinalRules(\"p|m|scroll-m|scroll-p\", { dash: false }),\n    arbitraryRule(),\n  ];\n}\n","import { createMerge } from \"./lib/create-merge\";\nimport { tailwind } from \"./tailwind\";\n\nexport { createMerge, tailwind };\nexport {\n  arbitraryRule,\n  cardinalRule,\n  cardinalRules,\n  conflictRule,\n  simpleRule,\n  uniqueRule,\n} from \"./rules\";\n\nexport const twMerge = createMerge(tailwind());\n"],"names":["isNumericValue","value","_value$match","arbitraryValue","match","isNaN","parseInt","normalizeContext","context","separator","important","endsWith","variants","replace","split","section","normalizedSections","commitSection","length","push","sort","a","b","startsWith","localeCompare","join","sortContextSection","i","variant","createMerge","ruleSet","_temp","_ref","_ref$cacheSize","cacheSize","_ref$separator","prefix","cache","maxCacheSize","get","set","_","Map","previousCache","update","key","undefined","has","createLruCache","parsedRuleSet","map","_ref2","handler","RegExp","className","cached","memoryStore","classes","outputClasses","classI","currentClass","didNotMatchOrWasContinued","ruleI","rule","_groups$c","_memoryStore$ruleI","_memoryStore$ruleI$co","_ruleI","_memoryStore$_ruleI","groups","c","result","continueToNextRule","unshift","simpleRule","target","_temp2","byType","memory","_memory$target","t","type","v","mem","CARDINAL_OVERRIDES","r","l","x","y","s","e","ss","se","es","ee","CARDINAL_DIRECTIONS","Object","keys","cardinalRule","_temp4","_temp3","_ref6","_ref6$dash","dash","_ref5","_memory$direction","_memory$_","_memory$_$type","_memory$_2","_CARDINAL_OVERRIDES$d","_ref5$d","d","direction","memOverriders","Set","some","dir","add","cardinalRules","targets","options","uniqueRule","targetI","Array","isArray","slice","subtarget","subtargetI","flat","entries","find","createConflictHandler","overridableMap","forEach","_ref8","overridingUtility","_ref9","utility","u","Boolean","conflictRule","overridingUtilities","overridableUtilities","values","concat","BG_AND_OBJECT_POSITION","tailwind","inset","ordinal","flex","arbitraryRule","_ref7","_memory$property","property","p","done","twMerge"],"mappings":"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"}