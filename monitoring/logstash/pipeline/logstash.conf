# Logstash管道配置
input {
  beats {
    port => 5044
  }
}

filter {
  # 解析nginx访问日志
  if [service] == "ai-notebook-nginx" and [log][file][path] =~ "access" {
    grok {
      match => { 
        "message" => "%{COMBINEDAPACHELOG}" 
      }
    }
    
    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
    
    mutate {
      convert => { "response" => "integer" }
      convert => { "bytes" => "integer" }
    }
    
    if [response] >= 400 {
      mutate {
        add_tag => [ "error" ]
      }
    }
  }
  
  # 解析nginx错误日志
  if [service] == "ai-notebook-nginx" and [log][file][path] =~ "error" {
    grok {
      match => { 
        "message" => "(?<timestamp>%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER:threadid}\: \*%{NUMBER:connectionid} %{GREEDYDATA:errormessage}" 
      }
    }
    
    date {
      match => [ "timestamp", "yyyy/MM/dd HH:mm:ss" ]
    }
    
    mutate {
      add_tag => [ "nginx_error" ]
    }
  }
  
  # 解析应用日志
  if [service] == "ai-notebook-backend" {
    grok {
      match => { 
        "message" => "%{TIMESTAMP_ISO8601:timestamp} - %{LOGLEVEL:level} - %{GREEDYDATA:log_message}" 
      }
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    
    if [level] in ["ERROR", "CRITICAL"] {
      mutate {
        add_tag => [ "application_error" ]
      }
    }
  }
  
  # 解析系统日志
  if [service] == "system" {
    grok {
      match => { 
        "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{IPORHOST:logsource} %{PROG:program}(?:\[%{POSINT:pid}\])?: %{GREEDYDATA:log_message}" 
      }
    }
    
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
  
  # 添加地理位置信息（如果有IP）
  if [clientip] {
    geoip {
      source => "clientip"
      target => "geoip"
    }
  }
  
  # 清理字段
  mutate {
    remove_field => [ "agent", "ecs", "input", "log" ]
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "ai-notebook-%{service}-%{+YYYY.MM.dd}"
  }
  
  # 错误日志单独索引
  if "error" in [tags] or "application_error" in [tags] or "nginx_error" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "ai-notebook-errors-%{+YYYY.MM.dd}"
    }
  }
  
  # 调试输出（开发时使用）
  # stdout { codec => rubydebug }
}