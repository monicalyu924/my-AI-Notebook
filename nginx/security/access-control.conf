# Nginx访问控制配置
# 控制对敏感路径和文件的访问

# 拒绝访问隐藏文件
location ~ /\. {
    deny all;
    access_log off;
    log_not_found off;
    return 404;
}

# 拒绝访问备份文件
location ~ ~$ {
    deny all;
    access_log off;
    log_not_found off;
    return 404;
}

# 拒绝访问配置文件
location ~* \.(conf|config|cfg|ini|json|yml|yaml|env)$ {
    deny all;
    access_log off;
    log_not_found off;
    return 404;
}

# 拒绝访问日志文件
location ~* \.(log|logs)$ {
    deny all;
    access_log off;
    log_not_found off;
    return 404;
}

# 拒绝访问数据库文件
location ~* \.(sql|db|sqlite|sqlite3)$ {
    deny all;
    access_log off;
    log_not_found off;
    return 404;
}

# 拒绝访问源代码文件
location ~* \.(py|php|sh|bash|cmd|bat|ps1)$ {
    deny all;
    access_log off;
    log_not_found off;
    return 404;
}

# 拒绝访问敏感目录
location ~ ^/(\.git|\.svn|\.hg|\.bzr|node_modules|\.npm|\.yarn) {
    deny all;
    access_log off;
    log_not_found off;
    return 404;
}

# 管理员路径访问控制
location /admin {
    # 只允许特定IP访问
    allow 192.168.1.0/24;
    allow 10.0.0.0/8;
    deny all;
    
    # 应用速率限制
    limit_req zone=login burst=5 nodelay;
    
    # 传递给后端
    proxy_pass http://backend:8000;
    include /etc/nginx/proxy_params;
}

# API路径访问控制
location /api/ {
    # API速率限制
    limit_req zone=api burst=20 nodelay;
    
    # CORS预检请求处理
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://ai-notebook.com' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        add_header 'Access-Control-Max-Age' 86400 always;
        return 204;
    }
    
    # 传递给后端
    proxy_pass http://backend:8000;
    include /etc/nginx/proxy_params;
}

# 登录端点特殊保护
location = /api/auth/login {
    # 严格的速率限制
    limit_req zone=login burst=3 nodelay;
    
    # 记录登录尝试
    access_log /var/log/nginx/login_attempts.log combined;
    
    # 传递给后端
    proxy_pass http://backend:8000;
    include /etc/nginx/proxy_params;
}

# 静态文件访问控制
location /static/ {
    # 静态文件速率限制
    limit_req zone=static burst=50 nodelay;
    
    # 缓存控制
    expires 1y;
    add_header Cache-Control "public, immutable";
    
    # 安全头
    add_header X-Content-Type-Options nosniff;
    
    # 文件类型限制
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # 禁止执行脚本
    location ~* \.(php|py|sh|pl|cgi)$ {
        deny all;
    }
}

# 健康检查端点
location /health {
    access_log off;
    return 200 "OK\n";
    add_header Content-Type text/plain;
}

# 机器人文件
location = /robots.txt {
    access_log off;
    log_not_found off;
    return 200 "User-agent: *\nDisallow: /admin\nDisallow: /api\n";
    add_header Content-Type text/plain;
}

# 网站地图
location = /sitemap.xml {
    access_log off;
    try_files $uri @frontend;
}

# 默认拒绝未知路径
location ~ ^/(phpMyAdmin|phpmyadmin|pma|mysql|sql|database|wp-admin|wp-login|wordpress) {
    deny all;
    access_log off;
    log_not_found off;
    return 404;
}