version: '3.8'

# Staging环境Docker Compose配置
services:
  # 前端服务
  frontend:
    image: ghcr.io/ai-notebook/ai-notebook-frontend:develop
    container_name: ai-notebook-frontend-staging
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      - NODE_ENV=staging
      - VITE_API_BASE_URL=https://staging-api.ai-notebook.com
    volumes:
      - ./logs/nginx-staging:/var/log/nginx
    depends_on:
      - backend
    networks:
      - ai-notebook-staging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 后端服务
  backend:
    image: ghcr.io/ai-notebook/ai-notebook-backend:develop
    container_name: ai-notebook-backend-staging
    restart: unless-stopped
    ports:
      - "8001:8000"
    environment:
      - APP_ENV=staging
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/ai_notebook_staging
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DEBUG=false
      - LOG_LEVEL=DEBUG
    volumes:
      - ./logs/backend-staging:/app/logs
      - ./uploads-staging:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - ai-notebook-staging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: ai-notebook-postgres-staging
    restart: unless-stopped
    environment:
      - POSTGRES_DB=ai_notebook_staging
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - ai-notebook-staging
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ai_notebook_staging"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: ai-notebook-redis-staging
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 128mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_staging_data:/data
    ports:
      - "6380:6379"
    networks:
      - ai-notebook-staging
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

networks:
  ai-notebook-staging:
    driver: bridge

volumes:
  postgres_staging_data:
  redis_staging_data: